//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EvfaEOC.evfasr {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="evfasr.evfawsaSoap")]
    public interface evfawsaSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchEvents(string partial, System.DateTime sd, System.DateTime ed, bool incdel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchEvents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchEventsAsync(string partial, System.DateTime sd, System.DateTime ed, bool incdel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEventJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getEventJobs(int EventID, int JobStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEventJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getEventJobsAsync(int EventID, int JobStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEventCodeName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getEventCodeName(int EventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEventCodeName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getEventCodeNameAsync(int EventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTeamRota", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTeamRota(int EventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTeamRota", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTeamRotaAsync(int EventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEventStartDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getEventStartDateTime(int EventID, string SE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEventStartDateTime", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getEventStartDateTimeAsync(int EventID, string SE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getJobData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getJobData(int EventID, int JobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getJobData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getJobDataAsync(int EventID, int JobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/savePrf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int savePrf(System.Data.DataSet ds, int prfid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/savePrf", ReplyAction="*")]
        System.Threading.Tasks.Task<int> savePrfAsync(System.Data.DataSet ds, int prfid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPrfData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getPrfData(int EventID, int JobID, int PrfID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPrfData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getPrfDataAsync(int EventID, int JobID, int PrfID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getnextJobID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getnextJobID(int EventID, int TeamID, int AuditID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getnextJobID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getnextJobIDAsync(int EventID, int TeamID, int AuditID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface evfawsaSoapChannel : EvfaEOC.evfasr.evfawsaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class evfawsaSoapClient : System.ServiceModel.ClientBase<EvfaEOC.evfasr.evfawsaSoap>, EvfaEOC.evfasr.evfawsaSoap {
        
        public evfawsaSoapClient() {
        }
        
        public evfawsaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public evfawsaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public evfawsaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public evfawsaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataSet SearchEvents(string partial, System.DateTime sd, System.DateTime ed, bool incdel) {
            return base.Channel.SearchEvents(partial, sd, ed, incdel);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchEventsAsync(string partial, System.DateTime sd, System.DateTime ed, bool incdel) {
            return base.Channel.SearchEventsAsync(partial, sd, ed, incdel);
        }
        
        public System.Data.DataSet getEventJobs(int EventID, int JobStatus) {
            return base.Channel.getEventJobs(EventID, JobStatus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getEventJobsAsync(int EventID, int JobStatus) {
            return base.Channel.getEventJobsAsync(EventID, JobStatus);
        }
        
        public string getEventCodeName(int EventID) {
            return base.Channel.getEventCodeName(EventID);
        }
        
        public System.Threading.Tasks.Task<string> getEventCodeNameAsync(int EventID) {
            return base.Channel.getEventCodeNameAsync(EventID);
        }
        
        public System.Data.DataSet getTeamRota(int EventID) {
            return base.Channel.getTeamRota(EventID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTeamRotaAsync(int EventID) {
            return base.Channel.getTeamRotaAsync(EventID);
        }
        
        public string getEventStartDateTime(int EventID, string SE) {
            return base.Channel.getEventStartDateTime(EventID, SE);
        }
        
        public System.Threading.Tasks.Task<string> getEventStartDateTimeAsync(int EventID, string SE) {
            return base.Channel.getEventStartDateTimeAsync(EventID, SE);
        }
        
        public System.Data.DataSet getJobData(int EventID, int JobID) {
            return base.Channel.getJobData(EventID, JobID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getJobDataAsync(int EventID, int JobID) {
            return base.Channel.getJobDataAsync(EventID, JobID);
        }
        
        public int savePrf(System.Data.DataSet ds, int prfid) {
            return base.Channel.savePrf(ds, prfid);
        }
        
        public System.Threading.Tasks.Task<int> savePrfAsync(System.Data.DataSet ds, int prfid) {
            return base.Channel.savePrfAsync(ds, prfid);
        }
        
        public System.Data.DataSet getPrfData(int EventID, int JobID, int PrfID) {
            return base.Channel.getPrfData(EventID, JobID, PrfID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getPrfDataAsync(int EventID, int JobID, int PrfID) {
            return base.Channel.getPrfDataAsync(EventID, JobID, PrfID);
        }
        
        public string getnextJobID(int EventID, int TeamID, int AuditID) {
            return base.Channel.getnextJobID(EventID, TeamID, AuditID);
        }
        
        public System.Threading.Tasks.Task<string> getnextJobIDAsync(int EventID, int TeamID, int AuditID) {
            return base.Channel.getnextJobIDAsync(EventID, TeamID, AuditID);
        }
    }
}
